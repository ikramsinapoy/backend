CREATE TABLE product_types(
    -> product_types_id INT NOT NULL AUTO_INCREMENT,
    -> product_types_name VARCHAR(255),
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(product_types_id));

CREATE TABLE operators(
    -> operators_id INT NOT NULL AUTO_INCREMENT,
    -> operators_name VARCHAR(255),
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(operators_id));SHOW TEBLE

CREATE TABLE product_description(
    -> product_description_id INT NOT NULL AUTO_INCREMENT,
    -> description TEXT,
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(product_description_id));

CREATE TABLE users(
    -> id INT NOT NULL AUTO_INCREMENT,
    -> name VARCHAR(255),
    -> status SMALLINT,
    -> dob DATETIME,
    -> gender VARCHAR(255),
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(id));

CREATE TABLE payment_method(
    -> id INT NOT NULL AUTO_INCREMENT,
    -> name VARCHAR(255),
    -> status SMALLINT,
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(id));

CREATE TABLE product(
    -> id INT NOT NULL AUTO_INCREMENT,
    -> product_type_id INT,
    -> operator_id INT,
    -> code VARCHAR(50),
    -> name VARCHAR(100),
    -> status SMALLINT,
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(id),
    -> CONSTRAINT FK_PT_id FOREIGN KEY (product_type_id) REFERENCES product_types(product_types_id) ON DELETE CASCADE,
    -> CONSTRAINT FK_OP_id FOREIGN KEY (operator_id) REFERENCES operators(operators_id) ON DELETE CASCADE);

CREATE TABLE transaction(
    -> id INT NOT NULL AUTO_INCREMENT,
    -> user_id INT,
    -> payment_method_id INT,
    -> status VARCHAR(10),
    -> total_qty INT(11),
    -> total_price NUMERIC(25,2),
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> PRIMARY KEY(id),
    -> CONSTRAINT FK_user_id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    -> CONSTRAINT FK_PM_id FOREIGN KEY (payment_method_id) REFERENCES payment_method(id) ON DELETE CASCADE);

 CREATE TABLE transaction_detail(
    -> transaction_id INT,
    -> product_id INT,
    -> status VARCHAR(10),
    -> qty INT(11),
    -> price NUMERIC(25,2),
    -> created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -> CONSTRAINT FK_Trans_TD_id FOREIGN KEY (transaction_id) REFERENCES transaction(id) ON DELETE CASCADE,
    -> CONSTRAINT FK_Product_TD_id FOREIGN KEY (product_id) REFERENCES product(id) ON DELETE CASCADE);

INSERT INTO operators VALUES(NULL,"Telkomsel",now(),now());
INSERT INTO operators VALUES(NULL,"XL",now(),now());
INSERT INTO operators VALUES(NULL,"Indosat",now(),now());
INSERT INTO operators VALUES(NULL,"Smartfren",now(),now());
INSERT INTO operators VALUES(NULL,"Tri",now(),now());

INSERT INTO product_types VALUES(NULL,"Pulsa",now(),now());
INSERT INTO product_types VALUES(NULL,"Paket",now(),now());
INSERT INTO product_types VALUES(NULL,"Voucher",now(),now());

INSERT INTO product VALUES(NULL,1,3,"50","Pulsa 50k Indosat",1,now(),now());
INSERT INTO product VALUES(NULL,1,3,"100","Pulsa 100k Indosat",1,now(),now());
INSERT INTO product VALUES(NULL,1,3,"150","Pulsa 150k Indosat",1,now(),now());

INSERT INTO product VALUES(NULL,2,1,"100","Paket 100k Telkomsel",2,now(),now());
INSERT INTO product VALUES(NULL,2,1,"150","Paket 150k Telkomsel",2,now(),now());
INSERT INTO product VALUES(NULL,2,1,"50","Paket 50k Telkomsel",2,now(),now());

INSERT INTO product VALUES(NULL,3,4,"150","Voucher 150k Smartfren",3,now(),now());
INSERT INTO product VALUES(NULL,3,4,"250","Voucher 250k Smartfren",3,now(),now());
INSERT INTO product VALUES(NULL,3,4,"200","Voucher 200k Smartfren",3,now(),now());

INSERT INTO product_description VALUES(NULL,"Pulsa dari Operator Indosat senilai Rp.50.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Pulsa dari Operator Indosat senilai Rp.100.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Pulsa dari Operator Indosat senilai Rp.150.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Voucher dari Operator Smartfren senilai Rp.150.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Voucher dari Operator Smartfren senilai Rp.200.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Voucher dari Operator Smartfren senilai Rp.250.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Paket dari Operator Telkomsel senilai Rp.50.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Paket dari Operator Telkomsel senilai Rp.100.000",now(),now());
INSERT INTO product_description VALUES(NULL,"Paket dari Operator Telkomsel senilai Rp.150.000",now(),now());

INSERT INTO payment_method VALUES(NULL,"Cash",1,now(),now());
INSERT INTO payment_method VALUES(NULL,"Transfer bank",2,now(),now());
INSERT INTO payment_method VALUES(NULL,"E-Wallett",3,now(),now());

INSERT INTO users VALUES(NULL,"Muhammad",0,now(),"Pria",now(),now());
INSERT INTO users VALUES(NULL,"Ikram",1,now(),"Pria",now(),now());
INSERT INTO users VALUES(NULL,"Rania",1,now(),"Wanita",now(),now());
INSERT INTO users VALUES(NULL,"Lala",0,now(),"Wanita",now(),now());
INSERT INTO users VALUES(NULL,"Sinapoy",0,now(),"Pria",now(),now());

INSERT INTO transaction VALUES(NULL,1,1,"done",1,100000,now(),now());
INSERT INTO transaction VALUES(NULL,1,2,"done",1,150000,now(),now());
INSERT INTO transaction VALUES(NULL,1,3,"done",1,50000,now(),now());
INSERT INTO transaction VALUES(NULL,2,1,"done",1,200000,now(),now());
INSERT INTO transaction VALUES(NULL,2,2,"done",1,250000,now(),now());
INSERT INTO transaction VALUES(NULL,2,3,"done",1,150000,now(),now());
INSERT INTO transaction VALUES(NULL,3,1,"done",1,50000,now(),now());
INSERT INTO transaction VALUES(NULL,3,2,"done",1,150000,now(),now());
INSERT INTO transaction VALUES(NULL,3,3,"done",1,100000,now(),now());
INSERT INTO transaction VALUES(NULL,4,1,"done",1,200000,now(),now());
INSERT INTO transaction VALUES(NULL,4,2,"done",1,200000,now(),now());
INSERT INTO transaction VALUES(NULL,4,3,"done",1,250000,now(),now());
INSERT INTO transaction VALUES(NULL,5,1,"done",1,50000,now(),now());
INSERT INTO transaction VALUES(NULL,5,2,"done",1,100000,now(),now());
INSERT INTO transaction VALUES(NULL,5,3,"done",1,150000,now(),now());

SELECT * from users WHERE gender="Pria";
SELECT * from product WHERE id=3;
SELECT * from users WHERE created_at >= DATE(NOW()) - INTERVAL 7 DAY AND name LIKE '%a%';
SELECT COUNT(gender) from users WHERE gender="Wanita";
SELECT * from users ORDER BY name asc;
SELECT * from product LIMIT 5;

UPDATE product SET name="product dummy" WHERE id=1;
UPDATE transaction_detail SET qty=3 WHERE product_id=1;

DELETE from product WHERE id=1;
DELETE from product WHERE product_type_id=1;

SELECT * from transaction WHERE user_id = 1 UNION SELECT * from transaction WHERE user_id = 2;
SELECT SUM(transaction.total_price) , users.name FROM transaction JOIN users ON transaction.id = 1 AND users.id =1;
SELECT COUNT(*) AS total FROM transaction_detail td INNER JOIN product p ON td.product_id = p.id WHERE p.product_type_id = 2;


SELECT p.*, pt.product_types_name FROM product p INNER JOIN product_types pt ON p.product_type_id = pt.product_types_id;		



SELECT * FROM product WHERE id NOT IN (SELECT product_id FROM transaction_detail);


SELECT COUNT(*) AS total FROM transaction_detail td INNER JOIN product p ON td.product_id = p.id WHERE p.product_type_id = 2;
SELECT t.*, p.name AS product_name, u.name AS user_name FROM ((users u INNER JOIN transaction t ON u.id = t.user_id) INNER JOIN transaction_detail td ON t.id = td.transaction_id) INNER JOIN product p ON td.product_id = p.id;